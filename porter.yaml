name: cloudcasa
description: ""
version: 3.2.0
registry: catalogicsoftware.azurecr.io
images:
  kagent:
    name: kagent
    description: ""
    imagetype: docker
    repository: catalogicsoftware.azurecr.io/marketplaceimages/kagent
    tag: ""
    digest: sha256:b8951651abcd68548f3a9f62205098079d44e78c2238323c3a5568265f062b29
mixins:
- exec
- helm3
install:
- helm3:
    name: cloudcasa
    description: ""
    chart: ./cloudcasa
    set: {}
uninstall:
- exec:
    description: Not implemented
    command: echo 'Not implemented'
parameters: []
custom:
  deploymentrestrictions:
    mincores: 0
    minnodes: 0
    minkubernetesversion: ""
    requiregpunodes: false
    openshiftallowed: false
    nodetype: ""
    newclusterrequired: false
  clusterarmtemplate: 
  uidefinition: 
  helmchart: H4sIFAAAAAAA/ykAK2FIUjBjSE02THk5NWIzVjBkUzVpWlM5Nk9WVjZNV2xqYW5keVRRbz1IZWxtAOxbb1Mbt9bPa32K85hnbhOK5f+GeNpOKaappyEwmOROp9MBeffYVtFKW0lrQjLcz35H0q53bUxI51LazKAX2NZqz9GRzu+nI+kQCZXFETOscTBn2tJrlohnD1yazWaz3+36z2azuf7Z7Pebz1rdTr+32+q2Or1nzVan1W0/g+ZDd2RTyYxl+lnzf9a1btwXUljK36E2XMkBLNqEpenyZ4e2aZPEaCLNU+urDpy3HDDDYMKiyywFg3rBI4Sp0vBzNkEt0aIBJmPwngWSWb5AYGkqeMScFEPmKsEBzK1NzaDRWHog5YrwyKkpHml2RWfczrNJZlBHSlqUlkYqaUTMMqFmPDJqaq+YxlJMfY4iiZwzN2bzespmaBpCzRRN5Yxc4vWV0rEZkDr84E0gdTgohLnvhYWkDqdorNLoalV6Teowjpgkl9kEl2P01Xfftmhrlzbrza9Iwri0jEvUXj4mjIsBmCxNlbbfr9gJIJkbhFt2kLy+aEwWq9Px0PNf4n/BRIbmryCAe/G/21nHf7fZfcL/Y5StLTgRyAzugFQWwc6ZBTvnBq64EKAWqDWPXT1CyjRL0KI2O8BlJLKYyxnEmKKMUUYczQ5ESk75LNMYg1WQmfDmTKgJE+BdjJCtrQAz53awfzQcw4HIjEUNoyGFMwUThFSrBY8xhsm1l+AIgJIotDvn8QBqNUKC3AEBYB8yje4LwIQLweVsFKO0fMpRD2B4/Ob47Oh4OPrxF9+EJ44WQnOASzZDaYtfADGfobEDMHPW7vUHk72XvVa/12KTKO7v9bp70w57Oe23281e8+Vec/dl3O3i7l7Ubnf2Ou1O1GG9Xn+v3e9Nm/32pP1yKddrHeTqlrUaZ9xYfb2BDKi3KtKUq0bC9CXaVLAIQ+8fhgpK/FtMUsEsmsab47PDMbXv7YNouB//vWZrDf/dfqf/hP/HKHVXAgN42DHLUVq4mnMRoOtXUuAGJpijXahrjP17hJzxdAD/Zjaa+8b7aZq3SJwUY5nNDGTGvemFqSRhMh6AW0QjKxoqghlaSFVsoC7LZa/OFSFHSnKrtH+zJIy3ox1fE3CDjmlyWgAzV5mInR2JWgQGOkUWX8PYMosURtPQi7w5N2CsYzku4QSlZzPXZdyBK63krKCl0RCuvOA5W7hRQrmkJ/rgC/Ijl034j/TkQcOAe/Hf6d3Cf/cJ/49SHIqrewA9YRFlmZ0rzT/4eJ1e7hm3AC1a5JI77OaoOFUCf+AeNSRBy2JmmVtDI43+vTOeoLEsSQcgMyEIgGATFPmqG6kkVdItu54L/JJYD5sKF8CnqMsYuUoKWgk8xalf8lP+Sqss/USnCcCtPlfk+ro6ixMuickmv2NkfeQe3hmHvc1+FKnMr9cbuhMqTcqi9SduYP/uyf2Msgn/JYM/DA3cg/9Os72O/36713vC/2OUdfyzNDUl1IdLT1iB+DoQSgQnTLLZErubcHEnDXxa3DKsH8DHj0Dfhc1qiP9DmExvxf1wc0NMipFTZVBgZJUOahMXsbyu9MOxSXpfH4zVzOLsegAfb4gL3P2ZhhlAiwAU8MkVVEbLFbGi67O0ARR9DwNVHi2Emnqxn6jdNSBhn0DDfoMW+wy4uWl83hv+F9zcfP95zcO2CW5uaqWZemYG8GutkRndECpiojHhsrE0N7e2tgO1et2gXqA+Z3HsK4LQ6qnJoNvthKZWGPfF6gxrvy21BbdcF17ZaBmV6Qgr0+Aq/8jQ2JU6N32JcjuyWr97xGsrj6I0G0Ct3Wsm1XrBE36nkFZ7b7OUXrMqZaFEluCRW2wqkuqQuJoTZucDaJhIO9etyApGr9ejXFRFhEZHv5yfHA/P3+wfHVYE+E35j1olq72fchRxvtLeqg+9KZycOvG3tLmN/fnB67fjs8PT89FwXeMKjst9vcPsuqSf3/5weHT8zok52n91q+//aAQUNgwPT14f/3J0+Obs/OT1/tmPx6dHG+yYo1g6hHbRk7YnSvDoegD74opdm/yZWQlN3myKS0qPqjAGJqm9HnKdM9gmD/pC4pan8jBlU/y3XLofaBd43/6v29ldj/+anaf471GKg/vHj3XgU5DKwnOh1GWWQm3RqkHtTeEINahV6WX95wvH2is3SUUAuZSwEj8yKZUNl0GBmzzxUTNvFGt0PfW0VxvAJWL6l+8qfaTlONENBUq/Cvnzrb97ev7ysgn/hj3sLdB9+G/fuv/tdnefzn8epazv/5bIXTv9eLwTni/+SOWLKiX+qeNgPpNK4wPruPf8t7V+/tPpPJ3/Pk7ZghNmLWppwCoI0w9Xc5QwybjwVyIpiy79LodswdmcmyKjwYCZoxD+cjecqHA52wGNIuR8pMzOK/VMxmQLJM48d8DzVOOUv8cYrridw/+9oHAsxTUo6d90XYIUNQgukRI6HJ+PfTLGFhyoJFES3h2MIebaEDrjtuH/hu4TOvmgG/5vUTGfNdyf4qdZyEYpKE9lmXKBhmxTc5WSbTphl2Sb2iQl2/8hW/COaa4yA6PhoSE01ep3jCyhPEbWCO20+v1LJKcS/6eH+8OjQ5rED67jHvz3+v32Gv7bvWbnCf+PUbYqOV2VBK59n6JAfl0+/O35pnytF1CHfRgnTFv4SSUIXJa3tetJYSHfyhCyBSNptYqzyDEBIWUPuAEGY8bGYJTIPE/4hJT8utVAJJgxdYEspJ4wy9wzi15ScSxi/lQ6GiUHec5KICZu4I+MR5f+LWTm2lMXTJjh0TLfjRuYakRKiGfEn1AkxU25NJYJkSstsmFMOSzeUB8NgZKwMur5MRglY8S1F359hdY6m8eWaYsxvMp4jJtnpTFDWzeh3Qs/FoljdS6nSifheswn4Zxo1PhHxg23aAhp0WpfWrS1+zVp02Bbhza/9u+MgnkszNzW1hacMhnNUa88gef7aWrgX3BUZq288Bpeq5l3ErVM8purBFeOef3IsTiGa5XpDcMDmYwxZAWclHNv2YTCm5DChKDRZlpWUgNGQ+qMeaWc6tudKxy3MObtiMIo92U/rSao2YFojtFlUM60lahNqJqo97mfOd9Rcm3+vHNQ0qGuz86XgfnNMTxHOqNlwxdeiPL5lkxAJfuSkm7Zp6XcVd9d9jIHTN64GAJQE3+JEAObqAVS0nOaK/3N5xAmmbXKz5KL4gVaLPw66FEhkSKcepJ+RcrbdKZZjJCnLfoksLzKvYHvufFuvEzSpECAbG+7mdveHsA7JnjMbKU1ygidwqnzhoPT4RgW/AMtzjYlS81cWaEKNC9QoFaUq521Jnn6qKFFBTVWaTbD/K54vf2dDf0Mrcl2tIR3vuEzT5gMwU0+dpGODcQKjbTBzh3A9xhlhekxt41i5FSKusTtVoDkwevRGhr/fngdViyYKiHUVTHXReqP2fH3ZixyDy4uLr5Z5th8d3FxEWLBTzpt2FxeXFz4z/8PwjWmyttU7hd91ZIdb2XWhbRiR5YbEoeronO/h5UhXFVTioB63aCF8jrj229KQ75b9vxsmV9ZSN+0OoQFJIdffnexAr9i8CuDVkjI16nA82/TmNkiBatsE9b4P+E0YSJWVI+Gfn3xrlTUTa7z21anktu7/elujymcJdDHkg8qeZqbHCC0rFYXAHrIyXsiK09WbOZ8oUpZy8EOk5f7nsxd/BP+9xk+UEgpX6fFhLiPlTmXmyCbt8jzDiFGj6rlSVOjetBUuIBWAichw6lx63btliw/RnVRnnt9e/exV/Ck7bXA17rhS5i+dMO+/KcEGOecBSMZ0e0vcZP5VJ7KU/lHlv8GAAD//3PZP6cAOAAA
  extensionregistrationparameters: eyJkZWZhdWx0U2NvcGUiOiJjbHVzdGVyIiwibmFtZXNwYWNlIjoiZGVmYXVsdCJ9
